pipeline {
    agent any
    parameters {
        string(defaultValue: 'minor', description: 'Version type to bump (minor/patch/major)', name: 'VERSION_TYPE')
    }
    environment {
        DOCKER_HUB_ID = '64.227.122.44:8083'
        DOCKER_HUB_URL = 'http://64.227.122.44:8083'
        DOCKERFILE_PATH = "Ex7 - Automation & CICD"
    }

    stages {
        stage('Tests') {
            steps {
                script {
                    dir('Ex7 - Automation & CICD/app') {
                            sh "npm i"
                            sh "npm run test"
                    }
                }
            }
        }
        stage('Bump Version') {
            steps {
                script {
                    dir('Ex7 - Automation & CICD/app'){
                        sh "npm version ${params.VERSION_TYPE}"

                        def packageJson = readJSON file: 'package.json'
                        def packageVersion = packageJson.version

                        env.IMAGE_TAG = "${packageVersion}-${env.BUILD_NUMBER}"
                    }
                }
            }
        }
         stage('Build Docker Image') {
            steps {
                sh 'groups'
                sh 'env'
                script {
                    echo env
                    sh 'env'
                }
                dir('Ex7 - Automation & CICD'){
                    sh "docker build -t ${env.DOCKER_HUB_ID}/myapp:${IMAGE_TAG} ."
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-login', usernameVariable: 'USER', passwordVariable: 'PWD')]){
                    sh "echo ${PWD} | docker login -u ${USER} --password-stdin"
                    sh "docker push ${env.DOCKER_HUB_ID}/myapp:${IMAGE_TAG}"
                }
            }
        }
    }
}